{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/images/M.jpg","path":"images/M.jpg","modified":1,"renderable":0},{"_id":"source/images/logo.jpg","path":"images/logo.jpg","modified":1,"renderable":0},{"_id":"source/images/mobike-wechat-app-2.png","path":"images/mobike-wechat-app-2.png","modified":1,"renderable":0},{"_id":"source/images/mobike-wechat-app-5.png","path":"images/mobike-wechat-app-5.png","modified":1,"renderable":0},{"_id":"source/images/mobike-wechat-app-6.png","path":"images/mobike-wechat-app-6.png","modified":1,"renderable":0},{"_id":"source/images/mobike-x-wechat.jpg","path":"images/mobike-x-wechat.jpg","modified":1,"renderable":0},{"_id":"source/images/mobike-d-768x512.jpg","path":"images/mobike-d-768x512.jpg","modified":1,"renderable":0},{"_id":"source/images/mobike-wechat-app-3-1.png","path":"images/mobike-wechat-app-3-1.png","modified":1,"renderable":0},{"_id":"source/images/mobike-wechat-app-4.png","path":"images/mobike-wechat-app-4.png","modified":1,"renderable":0},{"_id":"source/images/mobike-d-768x512-wechat.jpg","path":"images/mobike-d-768x512-wechat.jpg","modified":1,"renderable":0},{"_id":"themes/Daily/source/css/style.css","path":"css/style.css","modified":1,"renderable":1},{"_id":"themes/Daily/source/images/arrow-left.svg","path":"images/arrow-left.svg","modified":1,"renderable":1},{"_id":"themes/Daily/source/images/arrow-right.svg","path":"images/arrow-right.svg","modified":1,"renderable":1},{"_id":"themes/Daily/source/images/github.svg","path":"images/github.svg","modified":1,"renderable":1},{"_id":"themes/Daily/source/images/mail.svg","path":"images/mail.svg","modified":1,"renderable":1},{"_id":"themes/Daily/source/images/menu.svg","path":"images/menu.svg","modified":1,"renderable":1},{"_id":"themes/Daily/source/images/weibo.svg","path":"images/weibo.svg","modified":1,"renderable":1},{"_id":"source/images/201611.jpg","path":"images/201611.jpg","modified":1,"renderable":0},{"_id":"themes/Daily/source/images/twitter.svg","path":"images/twitter.svg","modified":1,"renderable":1},{"_id":"themes/Daily/source/js/app.js","path":"js/app.js","modified":1,"renderable":1},{"_id":"source/images/IMG_6492.jpg","path":"images/IMG_6492.jpg","modified":1,"renderable":0},{"_id":"source/images/mobike-wechat-app-1.png","path":"images/mobike-wechat-app-1.png","modified":1,"renderable":0},{"_id":"source/images/mobike-wechat-app-3.png","path":"images/mobike-wechat-app-3.png","modified":1,"renderable":0},{"_id":"source/images/IMG_6863.png","path":"images/IMG_6863.png","modified":1,"renderable":0},{"_id":"source/images/当代艺术馆-768x427.jpg","path":"images/当代艺术馆-768x427.jpg","modified":1,"renderable":0},{"_id":"source/images/mobike-x-wechat-1.png","path":"images/mobike-x-wechat-1.png","modified":1,"renderable":0},{"_id":"source/images/mobike-x-wechat-2.png","path":"images/mobike-x-wechat-2.png","modified":1,"renderable":0}],"Cache":[{"_id":"source/.DS_Store","hash":"12bad9e1d4f5d6f677e630d87964519fdd139bb9","modified":1483713685000},{"_id":"themes/Daily/.DS_Store","hash":"a145c190297fd50b84a9424c5d70897e0527fe6b","modified":1483709009000},{"_id":"themes/Daily/_config.yml","hash":"e26d3f73c1519a6746bbc3100365e759016fbbcc","modified":1483867597000},{"_id":"themes/Daily/README.md","hash":"d20fbbb4e03adcd95aec0bde06a281f0e2831eca","modified":1483700737000},{"_id":"source/_posts/摩拜单车微信小程序开发总结.md","hash":"73b624f7f16cc1988c2dcb771c73104cc2b192fc","modified":1483880589000},{"_id":"source/_posts/摩拜单车微信小程序快速开发实践.md","hash":"b94c76b6490f4a35752af83f14277fdd9a92bd0d","modified":1483868337000},{"_id":"source/images/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1483786020000},{"_id":"source/images/M.jpg","hash":"f80ac5caacc21a58de779f5aa69fd8facf299ba5","modified":1483715330000},{"_id":"source/images/logo.jpg","hash":"484ef32d0b643080a3b6ae1240a97cba7d4c0c1c","modified":1479446168000},{"_id":"source/images/mobike-wechat-app-2.png","hash":"61f72efb9996a404c321d300e3ae4574fec97aa8","modified":1483783678000},{"_id":"source/images/mobike-wechat-app-5.png","hash":"0909cf9498012e4f4fefdb0551fbe53da7194537","modified":1483786711000},{"_id":"source/images/mobike-wechat-app-6.png","hash":"7a885b9c9bd5e2063d84539b3d7155d55028de6e","modified":1483787626000},{"_id":"source/images/mobike-x-wechat.jpg","hash":"56aec8953c9732f829f435e7805b49ede93a36ed","modified":1483872325000},{"_id":"themes/Daily/languages/en.yml","hash":"2df42359e6646c0c2903ada8411100a8f1d15134","modified":1483700737000},{"_id":"themes/Daily/languages/zh-CN.yml","hash":"3e28e97eaf0e172ddee96b2d6f8ba604d90ff24d","modified":1483700737000},{"_id":"themes/Daily/languages/default.yml","hash":"2df42359e6646c0c2903ada8411100a8f1d15134","modified":1483700737000},{"_id":"themes/Daily/languages/zh-TW.yml","hash":"c727b3550a12ad6f99b13e1b320466f8238f4b54","modified":1483700737000},{"_id":"themes/Daily/layout/archive.ejs","hash":"5afa6387ae87e15a4562822850806c51f471cbe8","modified":1483869819000},{"_id":"themes/Daily/layout/author.ejs","hash":"ec870a1f2721aee36f58ecab6de7fe0a58ad34c5","modified":1483869972000},{"_id":"themes/Daily/layout/index.ejs","hash":"3317310e01719dd58878fb4b7bd1b41d495800af","modified":1483700737000},{"_id":"themes/Daily/layout/layout.ejs","hash":"c673e9ca69477f985a421682722fc91c5c72c986","modified":1483700737000},{"_id":"themes/Daily/layout/post.ejs","hash":"2ac85b3534482432e1df726c95b8e6ce0ce0bc1f","modified":1483869681000},{"_id":"themes/Daily/layout/tag.ejs","hash":"f13f991cdd2d462cfaff2ead0a110504e10d1d2f","modified":1483700737000},{"_id":"source/images/mobike-d-768x512.jpg","hash":"b74643b6b760dd107291291c27bd58328d210ec6","modified":1478835805000},{"_id":"source/images/mobike-wechat-app-3-1.png","hash":"1efb51f7512b799c0cea9590972e9ec22b579150","modified":1483785014000},{"_id":"source/images/mobike-wechat-app-4.png","hash":"ce0b5a3b2a72215eb9ba5136140e9e91a6b55f04","modified":1483786003000},{"_id":"source/images/mobike-d-768x512-wechat.jpg","hash":"d0e8f739eeff91446aab4b88b94edbad4ff7ec23","modified":1483790286000},{"_id":"themes/Daily/layout/_partial/after-footer.ejs","hash":"faf39b6ae3ec3459d46df0427efdb488fda82ca6","modified":1483700737000},{"_id":"themes/Daily/layout/_partial/article-index.ejs","hash":"7bb06fc76a08175c25bf598060bbc1e1f1ca9ad1","modified":1483867482000},{"_id":"themes/Daily/layout/_partial/article-archive.ejs","hash":"32e6d38ac9074922f958126da4eb5cde0ae98da4","modified":1483867406000},{"_id":"themes/Daily/layout/_partial/head.ejs","hash":"9338cdc926aae79a50733e014e82471202b8fa07","modified":1483700737000},{"_id":"themes/Daily/layout/_partial/footer.ejs","hash":"deb9d48ab62db062897510d327dce1c62b805939","modified":1483712489000},{"_id":"themes/Daily/layout/_partial/comment.ejs","hash":"78f033711e102458fd8e5f246d67577d5e827751","modified":1483718351000},{"_id":"themes/Daily/layout/_partial/nav.ejs","hash":"bf9a3b3345e9d1798bbf2c9d88345d1781f0f73f","modified":1483790673000},{"_id":"themes/Daily/layout/_partial/pagination.ejs","hash":"98af75b95859dc6aae946497f27d7e51f753e5f6","modified":1483700737000},{"_id":"themes/Daily/source/css/style.css","hash":"17d96ac868e770f96dde638f09a9b3c879c3eade","modified":1483869773000},{"_id":"themes/Daily/source/images/arrow-left.svg","hash":"4230dcb796a40d7a0f54c68e1ffb1f325ad962a5","modified":1483700737000},{"_id":"themes/Daily/source/images/arrow-right.svg","hash":"98c04bf1be3ca657f1e9697dc63219ade0a5616c","modified":1483700737000},{"_id":"themes/Daily/source/images/github.svg","hash":"bc2e3f2e54c354acfe64899482f6379d25f04792","modified":1483700737000},{"_id":"themes/Daily/source/images/mail.svg","hash":"18b3549b0447d605ca252fefcaa4d8e11179ce21","modified":1483700737000},{"_id":"themes/Daily/source/images/menu.svg","hash":"a1837ac76bc3e2aaf30450941bfefcb29ba16411","modified":1483700737000},{"_id":"themes/Daily/source/images/weibo.svg","hash":"ffd43d8ae9f9ec4f5ae8b97cafa9023ac2a4e59b","modified":1483700737000},{"_id":"source/images/201611.jpg","hash":"d0cd8b34aaad985581edd0ba9815be32991c3f90","modified":1483708111000},{"_id":"themes/Daily/source/images/twitter.svg","hash":"2bef6c843de0113721c6c5d1676385897a22a446","modified":1483700737000},{"_id":"themes/Daily/source/js/app.js","hash":"141c5ad2862b0943cb1da6e23156de5bfb007be4","modified":1483718221000},{"_id":"source/images/IMG_6492.jpg","hash":"9355c26b41b4baea4c03f4d92cd2dbdfa48e642d","modified":1481547351000},{"_id":"source/images/mobike-wechat-app-1.png","hash":"6fa6e23279e09fef0454f973332aa619cc85162d","modified":1483781471000},{"_id":"source/images/mobike-wechat-app-3.png","hash":"8edb606037d0135c897d83bcb1267b0d8d1f4992","modified":1483784990000},{"_id":"source/images/IMG_6863.png","hash":"d5ba5f7c3a58fa2355e1ae37c9bc466b65881144","modified":1483781340000}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"摩拜单车微信小程序快速开发实践","photos":["/images/mobike-d-768x512-wechat.jpg"],"author":"binnng","_content":"\n## 前言\n\n关于微信小程序的介绍不多说，关于摩拜单车更不用多说，本文主要讲讲从摩拜单车开始做小程序到开发提交微信审核的过程，前后也就一个礼拜多点时间，更甚至开发地点都跨越了上海、北京两地。\n\n曾经看到一篇言论：摩拜单车特别适合微信小程序的场景——马路上看到橙黄色单车，没有WIFI又赶时间，这时候打开微信扫一扫就可以骑走，真是无比炫酷的场景。\n\n也许你正和女朋友聊着天，不用切换APP，就骑了辆单车以最快的速度见面。\n\n## 小程序大更新\n\n12月20日，记得是个周二，微信小程序迎来大更新，不管是微信端，还是PC端的小程序开发工具，开始支持了期盼已久的功能组件，比如「地图打多点」、开放「扫一扫」，这就可以实现摩拜单车的基础功能——地图找车，扫码开锁。基于这个前提，已经可以着手开始规划摩拜单车小程序如何实现，以及要实现哪些功能。\n\n摩拜单车前端团队第一时间更新，并利用摩拜现有API和新的微信API做了DEMO，基本实现了地图找车功能。\n\n![Mobike](/images/mobike-wechat-app-1.png)\n\n## 1月9日小程序正式上线\n\n12月28日，当时在上海，也许我正在我们新的酷炫高大上的上海办公室吃着瓜，“2017微信公开课”公布小程序正式上线日期定在2017年1月9号，也就是下下个周一，真是“噩耗”，措手不及之后赶紧聚集PM和夏叔开紧急电话会议，最终决定为了赶在第一批小程序上线，我们砍掉之前规划的有些不是特别紧急的功能，实现最基础版的小程序摩拜单车——地图找车，扫码开锁，计费结算。\n\n## 需求评审\n\n12月29日，在北京的办公室紧急召集大家强行评审小程序，PM团队、设计师团队、QA团队等，需求明确后，各自开工。\n\n![Mobike](/images/mobike-wechat-app-2.png)\n\n## 设计稿\n\n12月30日，前端开始规划小程序架构，功能组件以及可能会是用到的前端库，确保在拿到设计稿之后的第一时间可以直接进入业务开发。给力的是，设计师团队在下班前就提供了完整的设计稿以及切图，之前写的DEMO版也更换成了正式的切图素材。\n\n![Mobike](/images/mobike-wechat-app-3.png)\n\n## 切页面\n\n12月31日，前端“切页面”的过程，因为要使用微信新的脚本语言，基本都是边看文档边写出页面，没了熟悉的`div`，却多了一层层的`view`；没了`window`变量，也没有`onclick`事件绑定，却有微信提供的\"wx\"全局方法，也有类似`Angular`的事件绑定；前端工程师不再可以自由操作`DOM`，而是不断设置类似`React`的`state`改变页面展现。\n\n![Mobike](/images/mobike-wechat-app-4.png)\n\n## 调接口\n\n2017年1月1日，和女朋友在上海跨完年后，紧急飞回北京，回到熟悉的大雾霾。\n\n假期的摩拜北京办公室依然有人值班。现在还清晰记得，1月2日听到的第一声小程序开锁声，激动不已，直接绕办公室骑行了好几圈。\n\n![Mobike](/images/mobike-wechat-app-5.png)\n\n## 提测\n\n1月3日，正式提测。期间遇到一些奇怪的bug，比如部分Android小程序在扫码成功后会Crash，想了很多办法还是没彻底解决，几轮测试后发现：在已有微信`map`组件的前提下，移除它再渲染一个新的`map`组件，就有极大可能引起Crash，业务场景就是找车的map销毁，骑行的map出现，直接Crash，解决办法也不复杂，整个小程序始终只有一个map组件，通过切换不同的`state`来达到不同展示的目的。技术细节以后再详解。\n\n## 提交审核\n\n1月6日，经过3天的测试和改bug，终于赶在周末前提交小程序审核，微信小程序团队的朋友也在第一时间体验并开锁成功。\n\n![Mobike](/images/mobike-wechat-app-6.png)\n\n## 广告\n\n说了这么多，重点来了：\n\n> 摩拜单车招聘前端工程师，不在乎PC端还是移动端，也不在乎React党还是Vue党，更不在乎有分号还是无分号党，我们的技术栈多而不乱，每项技术都只服务于自身最适合的项目。\n\n> 如果你爱折腾技术，也爱骑单车，那就最合适不过，欢迎投简历到 hr@mobike.com 或 zhangshibing@mobike.com 。\n","source":"_posts/摩拜单车微信小程序快速开发实践.md","raw":"---\ntitle: 摩拜单车微信小程序快速开发实践\nphotos: \"/images/mobike-d-768x512-wechat.jpg\"\nauthor: binnng\ntags: [\"小程序\"]\n---\n\n## 前言\n\n关于微信小程序的介绍不多说，关于摩拜单车更不用多说，本文主要讲讲从摩拜单车开始做小程序到开发提交微信审核的过程，前后也就一个礼拜多点时间，更甚至开发地点都跨越了上海、北京两地。\n\n曾经看到一篇言论：摩拜单车特别适合微信小程序的场景——马路上看到橙黄色单车，没有WIFI又赶时间，这时候打开微信扫一扫就可以骑走，真是无比炫酷的场景。\n\n也许你正和女朋友聊着天，不用切换APP，就骑了辆单车以最快的速度见面。\n\n## 小程序大更新\n\n12月20日，记得是个周二，微信小程序迎来大更新，不管是微信端，还是PC端的小程序开发工具，开始支持了期盼已久的功能组件，比如「地图打多点」、开放「扫一扫」，这就可以实现摩拜单车的基础功能——地图找车，扫码开锁。基于这个前提，已经可以着手开始规划摩拜单车小程序如何实现，以及要实现哪些功能。\n\n摩拜单车前端团队第一时间更新，并利用摩拜现有API和新的微信API做了DEMO，基本实现了地图找车功能。\n\n![Mobike](/images/mobike-wechat-app-1.png)\n\n## 1月9日小程序正式上线\n\n12月28日，当时在上海，也许我正在我们新的酷炫高大上的上海办公室吃着瓜，“2017微信公开课”公布小程序正式上线日期定在2017年1月9号，也就是下下个周一，真是“噩耗”，措手不及之后赶紧聚集PM和夏叔开紧急电话会议，最终决定为了赶在第一批小程序上线，我们砍掉之前规划的有些不是特别紧急的功能，实现最基础版的小程序摩拜单车——地图找车，扫码开锁，计费结算。\n\n## 需求评审\n\n12月29日，在北京的办公室紧急召集大家强行评审小程序，PM团队、设计师团队、QA团队等，需求明确后，各自开工。\n\n![Mobike](/images/mobike-wechat-app-2.png)\n\n## 设计稿\n\n12月30日，前端开始规划小程序架构，功能组件以及可能会是用到的前端库，确保在拿到设计稿之后的第一时间可以直接进入业务开发。给力的是，设计师团队在下班前就提供了完整的设计稿以及切图，之前写的DEMO版也更换成了正式的切图素材。\n\n![Mobike](/images/mobike-wechat-app-3.png)\n\n## 切页面\n\n12月31日，前端“切页面”的过程，因为要使用微信新的脚本语言，基本都是边看文档边写出页面，没了熟悉的`div`，却多了一层层的`view`；没了`window`变量，也没有`onclick`事件绑定，却有微信提供的\"wx\"全局方法，也有类似`Angular`的事件绑定；前端工程师不再可以自由操作`DOM`，而是不断设置类似`React`的`state`改变页面展现。\n\n![Mobike](/images/mobike-wechat-app-4.png)\n\n## 调接口\n\n2017年1月1日，和女朋友在上海跨完年后，紧急飞回北京，回到熟悉的大雾霾。\n\n假期的摩拜北京办公室依然有人值班。现在还清晰记得，1月2日听到的第一声小程序开锁声，激动不已，直接绕办公室骑行了好几圈。\n\n![Mobike](/images/mobike-wechat-app-5.png)\n\n## 提测\n\n1月3日，正式提测。期间遇到一些奇怪的bug，比如部分Android小程序在扫码成功后会Crash，想了很多办法还是没彻底解决，几轮测试后发现：在已有微信`map`组件的前提下，移除它再渲染一个新的`map`组件，就有极大可能引起Crash，业务场景就是找车的map销毁，骑行的map出现，直接Crash，解决办法也不复杂，整个小程序始终只有一个map组件，通过切换不同的`state`来达到不同展示的目的。技术细节以后再详解。\n\n## 提交审核\n\n1月6日，经过3天的测试和改bug，终于赶在周末前提交小程序审核，微信小程序团队的朋友也在第一时间体验并开锁成功。\n\n![Mobike](/images/mobike-wechat-app-6.png)\n\n## 广告\n\n说了这么多，重点来了：\n\n> 摩拜单车招聘前端工程师，不在乎PC端还是移动端，也不在乎React党还是Vue党，更不在乎有分号还是无分号党，我们的技术栈多而不乱，每项技术都只服务于自身最适合的项目。\n\n> 如果你爱折腾技术，也爱骑单车，那就最合适不过，欢迎投简历到 hr@mobike.com 或 zhangshibing@mobike.com 。\n","slug":"摩拜单车微信小程序快速开发实践","published":1,"date":"2017-01-06T13:08:31.000Z","updated":"2017-01-08T09:38:57.000Z","comments":1,"layout":"post","link":"","_id":"cixoo74dr0001kl5g2s4btvwx","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>关于微信小程序的介绍不多说，关于摩拜单车更不用多说，本文主要讲讲从摩拜单车开始做小程序到开发提交微信审核的过程，前后也就一个礼拜多点时间，更甚至开发地点都跨越了上海、北京两地。</p>\n<p>曾经看到一篇言论：摩拜单车特别适合微信小程序的场景——马路上看到橙黄色单车，没有WIFI又赶时间，这时候打开微信扫一扫就可以骑走，真是无比炫酷的场景。</p>\n<p>也许你正和女朋友聊着天，不用切换APP，就骑了辆单车以最快的速度见面。</p>\n<h2 id=\"小程序大更新\"><a href=\"#小程序大更新\" class=\"headerlink\" title=\"小程序大更新\"></a>小程序大更新</h2><p>12月20日，记得是个周二，微信小程序迎来大更新，不管是微信端，还是PC端的小程序开发工具，开始支持了期盼已久的功能组件，比如「地图打多点」、开放「扫一扫」，这就可以实现摩拜单车的基础功能——地图找车，扫码开锁。基于这个前提，已经可以着手开始规划摩拜单车小程序如何实现，以及要实现哪些功能。</p>\n<p>摩拜单车前端团队第一时间更新，并利用摩拜现有API和新的微信API做了DEMO，基本实现了地图找车功能。</p>\n<p><img src=\"/images/mobike-wechat-app-1.png\" alt=\"Mobike\"></p>\n<h2 id=\"1月9日小程序正式上线\"><a href=\"#1月9日小程序正式上线\" class=\"headerlink\" title=\"1月9日小程序正式上线\"></a>1月9日小程序正式上线</h2><p>12月28日，当时在上海，也许我正在我们新的酷炫高大上的上海办公室吃着瓜，“2017微信公开课”公布小程序正式上线日期定在2017年1月9号，也就是下下个周一，真是“噩耗”，措手不及之后赶紧聚集PM和夏叔开紧急电话会议，最终决定为了赶在第一批小程序上线，我们砍掉之前规划的有些不是特别紧急的功能，实现最基础版的小程序摩拜单车——地图找车，扫码开锁，计费结算。</p>\n<h2 id=\"需求评审\"><a href=\"#需求评审\" class=\"headerlink\" title=\"需求评审\"></a>需求评审</h2><p>12月29日，在北京的办公室紧急召集大家强行评审小程序，PM团队、设计师团队、QA团队等，需求明确后，各自开工。</p>\n<p><img src=\"/images/mobike-wechat-app-2.png\" alt=\"Mobike\"></p>\n<h2 id=\"设计稿\"><a href=\"#设计稿\" class=\"headerlink\" title=\"设计稿\"></a>设计稿</h2><p>12月30日，前端开始规划小程序架构，功能组件以及可能会是用到的前端库，确保在拿到设计稿之后的第一时间可以直接进入业务开发。给力的是，设计师团队在下班前就提供了完整的设计稿以及切图，之前写的DEMO版也更换成了正式的切图素材。</p>\n<p><img src=\"/images/mobike-wechat-app-3.png\" alt=\"Mobike\"></p>\n<h2 id=\"切页面\"><a href=\"#切页面\" class=\"headerlink\" title=\"切页面\"></a>切页面</h2><p>12月31日，前端“切页面”的过程，因为要使用微信新的脚本语言，基本都是边看文档边写出页面，没了熟悉的<code>div</code>，却多了一层层的<code>view</code>；没了<code>window</code>变量，也没有<code>onclick</code>事件绑定，却有微信提供的”wx”全局方法，也有类似<code>Angular</code>的事件绑定；前端工程师不再可以自由操作<code>DOM</code>，而是不断设置类似<code>React</code>的<code>state</code>改变页面展现。</p>\n<p><img src=\"/images/mobike-wechat-app-4.png\" alt=\"Mobike\"></p>\n<h2 id=\"调接口\"><a href=\"#调接口\" class=\"headerlink\" title=\"调接口\"></a>调接口</h2><p>2017年1月1日，和女朋友在上海跨完年后，紧急飞回北京，回到熟悉的大雾霾。</p>\n<p>假期的摩拜北京办公室依然有人值班。现在还清晰记得，1月2日听到的第一声小程序开锁声，激动不已，直接绕办公室骑行了好几圈。</p>\n<p><img src=\"/images/mobike-wechat-app-5.png\" alt=\"Mobike\"></p>\n<h2 id=\"提测\"><a href=\"#提测\" class=\"headerlink\" title=\"提测\"></a>提测</h2><p>1月3日，正式提测。期间遇到一些奇怪的bug，比如部分Android小程序在扫码成功后会Crash，想了很多办法还是没彻底解决，几轮测试后发现：在已有微信<code>map</code>组件的前提下，移除它再渲染一个新的<code>map</code>组件，就有极大可能引起Crash，业务场景就是找车的map销毁，骑行的map出现，直接Crash，解决办法也不复杂，整个小程序始终只有一个map组件，通过切换不同的<code>state</code>来达到不同展示的目的。技术细节以后再详解。</p>\n<h2 id=\"提交审核\"><a href=\"#提交审核\" class=\"headerlink\" title=\"提交审核\"></a>提交审核</h2><p>1月6日，经过3天的测试和改bug，终于赶在周末前提交小程序审核，微信小程序团队的朋友也在第一时间体验并开锁成功。</p>\n<p><img src=\"/images/mobike-wechat-app-6.png\" alt=\"Mobike\"></p>\n<h2 id=\"广告\"><a href=\"#广告\" class=\"headerlink\" title=\"广告\"></a>广告</h2><p>说了这么多，重点来了：</p>\n<blockquote>\n<p>摩拜单车招聘前端工程师，不在乎PC端还是移动端，也不在乎React党还是Vue党，更不在乎有分号还是无分号党，我们的技术栈多而不乱，每项技术都只服务于自身最适合的项目。</p>\n<p>如果你爱折腾技术，也爱骑单车，那就最合适不过，欢迎投简历到 hr@mobike.com 或 zhangshibing@mobike.com 。</p>\n</blockquote>\n","excerpt":"","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>关于微信小程序的介绍不多说，关于摩拜单车更不用多说，本文主要讲讲从摩拜单车开始做小程序到开发提交微信审核的过程，前后也就一个礼拜多点时间，更甚至开发地点都跨越了上海、北京两地。</p>\n<p>曾经看到一篇言论：摩拜单车特别适合微信小程序的场景——马路上看到橙黄色单车，没有WIFI又赶时间，这时候打开微信扫一扫就可以骑走，真是无比炫酷的场景。</p>\n<p>也许你正和女朋友聊着天，不用切换APP，就骑了辆单车以最快的速度见面。</p>\n<h2 id=\"小程序大更新\"><a href=\"#小程序大更新\" class=\"headerlink\" title=\"小程序大更新\"></a>小程序大更新</h2><p>12月20日，记得是个周二，微信小程序迎来大更新，不管是微信端，还是PC端的小程序开发工具，开始支持了期盼已久的功能组件，比如「地图打多点」、开放「扫一扫」，这就可以实现摩拜单车的基础功能——地图找车，扫码开锁。基于这个前提，已经可以着手开始规划摩拜单车小程序如何实现，以及要实现哪些功能。</p>\n<p>摩拜单车前端团队第一时间更新，并利用摩拜现有API和新的微信API做了DEMO，基本实现了地图找车功能。</p>\n<p><img src=\"/images/mobike-wechat-app-1.png\" alt=\"Mobike\"></p>\n<h2 id=\"1月9日小程序正式上线\"><a href=\"#1月9日小程序正式上线\" class=\"headerlink\" title=\"1月9日小程序正式上线\"></a>1月9日小程序正式上线</h2><p>12月28日，当时在上海，也许我正在我们新的酷炫高大上的上海办公室吃着瓜，“2017微信公开课”公布小程序正式上线日期定在2017年1月9号，也就是下下个周一，真是“噩耗”，措手不及之后赶紧聚集PM和夏叔开紧急电话会议，最终决定为了赶在第一批小程序上线，我们砍掉之前规划的有些不是特别紧急的功能，实现最基础版的小程序摩拜单车——地图找车，扫码开锁，计费结算。</p>\n<h2 id=\"需求评审\"><a href=\"#需求评审\" class=\"headerlink\" title=\"需求评审\"></a>需求评审</h2><p>12月29日，在北京的办公室紧急召集大家强行评审小程序，PM团队、设计师团队、QA团队等，需求明确后，各自开工。</p>\n<p><img src=\"/images/mobike-wechat-app-2.png\" alt=\"Mobike\"></p>\n<h2 id=\"设计稿\"><a href=\"#设计稿\" class=\"headerlink\" title=\"设计稿\"></a>设计稿</h2><p>12月30日，前端开始规划小程序架构，功能组件以及可能会是用到的前端库，确保在拿到设计稿之后的第一时间可以直接进入业务开发。给力的是，设计师团队在下班前就提供了完整的设计稿以及切图，之前写的DEMO版也更换成了正式的切图素材。</p>\n<p><img src=\"/images/mobike-wechat-app-3.png\" alt=\"Mobike\"></p>\n<h2 id=\"切页面\"><a href=\"#切页面\" class=\"headerlink\" title=\"切页面\"></a>切页面</h2><p>12月31日，前端“切页面”的过程，因为要使用微信新的脚本语言，基本都是边看文档边写出页面，没了熟悉的<code>div</code>，却多了一层层的<code>view</code>；没了<code>window</code>变量，也没有<code>onclick</code>事件绑定，却有微信提供的”wx”全局方法，也有类似<code>Angular</code>的事件绑定；前端工程师不再可以自由操作<code>DOM</code>，而是不断设置类似<code>React</code>的<code>state</code>改变页面展现。</p>\n<p><img src=\"/images/mobike-wechat-app-4.png\" alt=\"Mobike\"></p>\n<h2 id=\"调接口\"><a href=\"#调接口\" class=\"headerlink\" title=\"调接口\"></a>调接口</h2><p>2017年1月1日，和女朋友在上海跨完年后，紧急飞回北京，回到熟悉的大雾霾。</p>\n<p>假期的摩拜北京办公室依然有人值班。现在还清晰记得，1月2日听到的第一声小程序开锁声，激动不已，直接绕办公室骑行了好几圈。</p>\n<p><img src=\"/images/mobike-wechat-app-5.png\" alt=\"Mobike\"></p>\n<h2 id=\"提测\"><a href=\"#提测\" class=\"headerlink\" title=\"提测\"></a>提测</h2><p>1月3日，正式提测。期间遇到一些奇怪的bug，比如部分Android小程序在扫码成功后会Crash，想了很多办法还是没彻底解决，几轮测试后发现：在已有微信<code>map</code>组件的前提下，移除它再渲染一个新的<code>map</code>组件，就有极大可能引起Crash，业务场景就是找车的map销毁，骑行的map出现，直接Crash，解决办法也不复杂，整个小程序始终只有一个map组件，通过切换不同的<code>state</code>来达到不同展示的目的。技术细节以后再详解。</p>\n<h2 id=\"提交审核\"><a href=\"#提交审核\" class=\"headerlink\" title=\"提交审核\"></a>提交审核</h2><p>1月6日，经过3天的测试和改bug，终于赶在周末前提交小程序审核，微信小程序团队的朋友也在第一时间体验并开锁成功。</p>\n<p><img src=\"/images/mobike-wechat-app-6.png\" alt=\"Mobike\"></p>\n<h2 id=\"广告\"><a href=\"#广告\" class=\"headerlink\" title=\"广告\"></a>广告</h2><p>说了这么多，重点来了：</p>\n<blockquote>\n<p>摩拜单车招聘前端工程师，不在乎PC端还是移动端，也不在乎React党还是Vue党，更不在乎有分号还是无分号党，我们的技术栈多而不乱，每项技术都只服务于自身最适合的项目。</p>\n<p>如果你爱折腾技术，也爱骑单车，那就最合适不过，欢迎投简历到 hr@mobike.com 或 zhangshibing@mobike.com 。</p>\n</blockquote>\n"},{"title":"摩拜单车微信小程序开发技术总结","photos":["/images/当代艺术馆-768x427.jpg"],"author":"binnng","_content":"\n## 前言\n\n前一篇讲了如何在8天时间开发出一款微信小程序，并且包含了互联网开发产品的全部流程。这次主要讲讲技术方向的总结，在8天时间内如何一步步从学习到进阶。\n\n## 思维转变\n\n- 微信小程序没有HTML的常用标签，而是类似`React`的微信自定义组件，比如`view`、`text`、`map`等\n- 没有`window`变量，但微信提供了`wx`全局方法集\n- 事件绑定和条件渲染类似`Angular`，全部写在`WXML`中\n- 数据绑定采用`Mustache`双大括号语法\n- 无法操作`DOM`，通过改变`page data`（类似`React`的state）来改变视图展现\n\n所以如果你熟悉以上提到的所有前端技术栈，开发微信小程序你会得心应手。\n\n## 声明周期\n\n你可以理解小程序就是一个单页面的H5网页，所有元素的加载都是一次性的，这就引来了声明周期的概念：\n\n![mobike-wechatapp](/images/mobike-x-wechat-1.png)\n\n- 首次打开，小程序初始化\n- 小程序初始化完成后，触发`onShow`事件\n- 小程序被切换到后台（熄屏，切换APP等），触发`onHide`\n- 小程序从后台切换到前台，再次触发`onShow`\n- 小程序出错，触发`onError`\n\n每个页面也有自己的声明周期：\n\n![mobike-wechatapp](/images/mobike-x-wechat-2.png)\n\n> 注意：在微信6.5.3版本中，部分Android机触发不了`onLoad`事件，可以用`onReady`替代。\n\n## 事件广播\n\n“单页面结构”的微信小程序，你可以使用事件广播（统一的事件中心）来注册和触发自定义事件，否则到后期事件管理会越来越乱，而且涉及跨页面传输事件，你更需要这种事件触发机制，可以参考[broadcast.js](https://github.com/binnng/broadcast.js)。比如在摩拜单车中有这样的场景：\n\n** 扫码成功后在开锁页面A提示开锁成功，要跳转到骑行页面B并查询用户骑行状态。 **\n\n如果没有统一的事件管理中心，你几乎无法完成这样的过程，当然，可以使用Hack的方式解决。因为跳转到页面B会触发B的`onShow`事件，所以可以在`onShow`中写业务逻辑：\n\n``` js\n// Page A\n// 开锁成功后，跳转到Page B\nwx.redirectTo({\n  url: \"/pages/riding/index\"\n})\n```\n``` js\n// Page B\nPage({\n  onShow() {\n    // 检查骑行状态\n  }\n}\n})\n```\n\n但更合理的应该是利用事件广播来处理：\n\n``` js\nconst broadcast = require(\"libs/broadcast\")\n\n// 先注册事件\nbroadcast.on(\"check_ride_state\", () => {\n  // 检查骑行状态\n})\n```\n``` js\nconst broadcast = require(\"libs/broadcast\")\n\n// Page A\n// 开锁成功后，触发事件，再跳转到Page B\nbroadcast.fire(\"check_ride_state\")\nwx.redirectTo({\n  url: \"/pages/riding/index\"\n})\n```\n\n## 数据中心\n根目录的`app.js`很有用，根目录的`app.js`很有用，根目录的`app.js`很有用。\n因为在它内部注册的变量或方法，都是可以被所有页面获取到，所以利用它也可以处理上面所述的跨页面事件触发问题。而且可以注册`globalData`供所有页面取用，例如可以把`systemInfo`直接注册到`globalData`中，这样就不用在每个页面都获取一遍：\n\n``` js\n// app.js\n\nconst systemInfo = wx.getSystemInfoSync()\nApp({\n  globalData: {\n    systemInfo\n  }\n})\n```\n在页面获取：\n\n``` js\n// Page A\n\nconst {\n  systemInfo\n} = getApp().globalData\n```\n\n## 性能优化\n\n小程序运行在微信平台，而且可能和众多小程序“共享运行内存”，可想而知，单个小程序的性能极可能遇到瓶颈而Crash或被微信主动销毁！\n\n比如在摩拜单车有这个场景：\n\n** 首页展示地图找车，扫码成功后跳转到骑行地图。 **\n\n简单的逻辑，直接两个页面，两个`map`组件切换就可以搞定。实际测试场景中，iOS的确如预期，一切正常，但是在Android下，就很有可能会使得小程序Crash，扫码成功后直接退出了小程序。\n\n解决办法就是，** 整个小程序只维护一个`map`组件 **，通过不同的`State`来改变map的不同展现：\n\nindex.wxml\n``` html\n\t<map id=\"map\" controls=\"{{controls}}\" style=\"{{style}}\"></map>\n```\nindex/index.js\n``` js\nconst indexStyle = \"width: 750rpx; height: 1260rpx\"\nconst rideStyle = \"width: 750rpx; height: 960rpx\"\n\nPage({\n  data: {\n    style: indexStyle\n  },\n  onUnlock() {\n    this.setData({\n      style: rideStyle\n    })\n  }\n}\n})\n```\n这样就成功解决了部分Android设备小程序Crash的问题。\n\n## 广告\n\n说了这么多，重点来了：\n\n> 摩拜单车招聘前端工程师，不在乎PC端还是移动端，也不在乎React党还是Vue党，更不在乎有分号还是无分号党，我们的技术栈多而不乱，每项技术都只服务于自身最适合的项目。\n\n> 如果你爱折腾技术，也爱骑单车，那就最合适不过，欢迎投简历到 hr@mobike.com 或 zhangshibing@mobike.com 。\n","source":"_posts/摩拜单车微信小程序开发技术总结.md","raw":"---\ntitle: 摩拜单车微信小程序开发技术总结\nphotos: \"/images/当代艺术馆-768x427.jpg\"\nauthor: binnng\ntags: [\"小程序\"]\n---\n\n## 前言\n\n前一篇讲了如何在8天时间开发出一款微信小程序，并且包含了互联网开发产品的全部流程。这次主要讲讲技术方向的总结，在8天时间内如何一步步从学习到进阶。\n\n## 思维转变\n\n- 微信小程序没有HTML的常用标签，而是类似`React`的微信自定义组件，比如`view`、`text`、`map`等\n- 没有`window`变量，但微信提供了`wx`全局方法集\n- 事件绑定和条件渲染类似`Angular`，全部写在`WXML`中\n- 数据绑定采用`Mustache`双大括号语法\n- 无法操作`DOM`，通过改变`page data`（类似`React`的state）来改变视图展现\n\n所以如果你熟悉以上提到的所有前端技术栈，开发微信小程序你会得心应手。\n\n## 声明周期\n\n你可以理解小程序就是一个单页面的H5网页，所有元素的加载都是一次性的，这就引来了声明周期的概念：\n\n![mobike-wechatapp](/images/mobike-x-wechat-1.png)\n\n- 首次打开，小程序初始化\n- 小程序初始化完成后，触发`onShow`事件\n- 小程序被切换到后台（熄屏，切换APP等），触发`onHide`\n- 小程序从后台切换到前台，再次触发`onShow`\n- 小程序出错，触发`onError`\n\n每个页面也有自己的声明周期：\n\n![mobike-wechatapp](/images/mobike-x-wechat-2.png)\n\n> 注意：在微信6.5.3版本中，部分Android机触发不了`onLoad`事件，可以用`onReady`替代。\n\n## 事件广播\n\n“单页面结构”的微信小程序，你可以使用事件广播（统一的事件中心）来注册和触发自定义事件，否则到后期事件管理会越来越乱，而且涉及跨页面传输事件，你更需要这种事件触发机制，可以参考[broadcast.js](https://github.com/binnng/broadcast.js)。比如在摩拜单车中有这样的场景：\n\n** 扫码成功后在开锁页面A提示开锁成功，要跳转到骑行页面B并查询用户骑行状态。 **\n\n如果没有统一的事件管理中心，你几乎无法完成这样的过程，当然，可以使用Hack的方式解决。因为跳转到页面B会触发B的`onShow`事件，所以可以在`onShow`中写业务逻辑：\n\n``` js\n// Page A\n// 开锁成功后，跳转到Page B\nwx.redirectTo({\n  url: \"/pages/riding/index\"\n})\n```\n``` js\n// Page B\nPage({\n  onShow() {\n    // 检查骑行状态\n  }\n}\n})\n```\n\n但更合理的应该是利用事件广播来处理：\n\n``` js\nconst broadcast = require(\"libs/broadcast\")\n\n// 先注册事件\nbroadcast.on(\"check_ride_state\", () => {\n  // 检查骑行状态\n})\n```\n``` js\nconst broadcast = require(\"libs/broadcast\")\n\n// Page A\n// 开锁成功后，触发事件，再跳转到Page B\nbroadcast.fire(\"check_ride_state\")\nwx.redirectTo({\n  url: \"/pages/riding/index\"\n})\n```\n\n## 数据中心\n根目录的`app.js`很有用，根目录的`app.js`很有用，根目录的`app.js`很有用。\n因为在它内部注册的变量或方法，都是可以被所有页面获取到，所以利用它也可以处理上面所述的跨页面事件触发问题。而且可以注册`globalData`供所有页面取用，例如可以把`systemInfo`直接注册到`globalData`中，这样就不用在每个页面都获取一遍：\n\n``` js\n// app.js\n\nconst systemInfo = wx.getSystemInfoSync()\nApp({\n  globalData: {\n    systemInfo\n  }\n})\n```\n在页面获取：\n\n``` js\n// Page A\n\nconst {\n  systemInfo\n} = getApp().globalData\n```\n\n## 性能优化\n\n小程序运行在微信平台，而且可能和众多小程序“共享运行内存”，可想而知，单个小程序的性能极可能遇到瓶颈而Crash或被微信主动销毁！\n\n比如在摩拜单车有这个场景：\n\n** 首页展示地图找车，扫码成功后跳转到骑行地图。 **\n\n简单的逻辑，直接两个页面，两个`map`组件切换就可以搞定。实际测试场景中，iOS的确如预期，一切正常，但是在Android下，就很有可能会使得小程序Crash，扫码成功后直接退出了小程序。\n\n解决办法就是，** 整个小程序只维护一个`map`组件 **，通过不同的`State`来改变map的不同展现：\n\nindex.wxml\n``` html\n\t<map id=\"map\" controls=\"{{controls}}\" style=\"{{style}}\"></map>\n```\nindex/index.js\n``` js\nconst indexStyle = \"width: 750rpx; height: 1260rpx\"\nconst rideStyle = \"width: 750rpx; height: 960rpx\"\n\nPage({\n  data: {\n    style: indexStyle\n  },\n  onUnlock() {\n    this.setData({\n      style: rideStyle\n    })\n  }\n}\n})\n```\n这样就成功解决了部分Android设备小程序Crash的问题。\n\n## 广告\n\n说了这么多，重点来了：\n\n> 摩拜单车招聘前端工程师，不在乎PC端还是移动端，也不在乎React党还是Vue党，更不在乎有分号还是无分号党，我们的技术栈多而不乱，每项技术都只服务于自身最适合的项目。\n\n> 如果你爱折腾技术，也爱骑单车，那就最合适不过，欢迎投简历到 hr@mobike.com 或 zhangshibing@mobike.com 。\n","slug":"摩拜单车微信小程序开发技术总结","published":1,"date":"2017-01-08T13:02:48.000Z","updated":"2017-01-08T14:58:40.000Z","_id":"cixooq74t0006kl5gxv7jgttd","comments":1,"layout":"post","link":"","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>前一篇讲了如何在8天时间开发出一款微信小程序，并且包含了互联网开发产品的全部流程。这次主要讲讲技术方向的总结，在8天时间内如何一步步从学习到进阶。</p>\n<h2 id=\"思维转变\"><a href=\"#思维转变\" class=\"headerlink\" title=\"思维转变\"></a>思维转变</h2><ul>\n<li>微信小程序没有HTML的常用标签，而是类似<code>React</code>的微信自定义组件，比如<code>view</code>、<code>text</code>、<code>map</code>等</li>\n<li>没有<code>window</code>变量，但微信提供了<code>wx</code>全局方法集</li>\n<li>事件绑定和条件渲染类似<code>Angular</code>，全部写在<code>WXML</code>中</li>\n<li>数据绑定采用<code>Mustache</code>双大括号语法</li>\n<li>无法操作<code>DOM</code>，通过改变<code>page data</code>（类似<code>React</code>的state）来改变视图展现</li>\n</ul>\n<p>所以如果你熟悉以上提到的所有前端技术栈，开发微信小程序你会得心应手。</p>\n<h2 id=\"声明周期\"><a href=\"#声明周期\" class=\"headerlink\" title=\"声明周期\"></a>声明周期</h2><p>你可以理解小程序就是一个单页面的H5网页，所有元素的加载都是一次性的，这就引来了声明周期的概念：</p>\n<p><img src=\"/images/mobike-x-wechat-1.png\" alt=\"mobike-wechatapp\"></p>\n<ul>\n<li>首次打开，小程序初始化</li>\n<li>小程序初始化完成后，触发<code>onShow</code>事件</li>\n<li>小程序被切换到后台（熄屏，切换APP等），触发<code>onHide</code></li>\n<li>小程序从后台切换到前台，再次触发<code>onShow</code></li>\n<li>小程序出错，触发<code>onError</code></li>\n</ul>\n<p>每个页面也有自己的声明周期：</p>\n<p><img src=\"/images/mobike-x-wechat-2.png\" alt=\"mobike-wechatapp\"></p>\n<blockquote>\n<p>注意：在微信6.5.3版本中，部分Android机触发不了<code>onLoad</code>事件，可以用<code>onReady</code>替代。</p>\n</blockquote>\n<h2 id=\"事件广播\"><a href=\"#事件广播\" class=\"headerlink\" title=\"事件广播\"></a>事件广播</h2><p>“单页面结构”的微信小程序，你可以使用事件广播（统一的事件中心）来注册和触发自定义事件，否则到后期事件管理会越来越乱，而且涉及跨页面传输事件，你更需要这种事件触发机制，可以参考<a href=\"https://github.com/binnng/broadcast.js\" target=\"_blank\" rel=\"external\">broadcast.js</a>。比如在摩拜单车中有这样的场景：</p>\n<p><strong> 扫码成功后在开锁页面A提示开锁成功，要跳转到骑行页面B并查询用户骑行状态。 </strong></p>\n<p>如果没有统一的事件管理中心，你几乎无法完成这样的过程，当然，可以使用Hack的方式解决。因为跳转到页面B会触发B的<code>onShow</code>事件，所以可以在<code>onShow</code>中写业务逻辑：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// Page A</span></div><div class=\"line\"><span class=\"comment\">// 开锁成功后，跳转到Page B</span></div><div class=\"line\">wx.redirectTo(&#123;</div><div class=\"line\">  <span class=\"attr\">url</span>: <span class=\"string\">\"/pages/riding/index\"</span></div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// Page B</span></div><div class=\"line\">Page(&#123;</div><div class=\"line\">  onShow() &#123;</div><div class=\"line\">    <span class=\"comment\">// 检查骑行状态</span></div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<p>但更合理的应该是利用事件广播来处理：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> broadcast = <span class=\"built_in\">require</span>(<span class=\"string\">\"libs/broadcast\"</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 先注册事件</span></div><div class=\"line\">broadcast.on(<span class=\"string\">\"check_ride_state\"</span>, () =&gt; &#123;</div><div class=\"line\">  <span class=\"comment\">// 检查骑行状态</span></div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> broadcast = <span class=\"built_in\">require</span>(<span class=\"string\">\"libs/broadcast\"</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// Page A</span></div><div class=\"line\"><span class=\"comment\">// 开锁成功后，触发事件，再跳转到Page B</span></div><div class=\"line\">broadcast.fire(<span class=\"string\">\"check_ride_state\"</span>)</div><div class=\"line\">wx.redirectTo(&#123;</div><div class=\"line\">  <span class=\"attr\">url</span>: <span class=\"string\">\"/pages/riding/index\"</span></div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<h2 id=\"数据中心\"><a href=\"#数据中心\" class=\"headerlink\" title=\"数据中心\"></a>数据中心</h2><p>根目录的<code>app.js</code>很有用，根目录的<code>app.js</code>很有用，根目录的<code>app.js</code>很有用。<br>因为在它内部注册的变量或方法，都是可以被所有页面获取到，所以利用它也可以处理上面所述的跨页面事件触发问题。而且可以注册<code>globalData</code>供所有页面取用，例如可以把<code>systemInfo</code>直接注册到<code>globalData</code>中，这样就不用在每个页面都获取一遍：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// app.js</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">const</span> systemInfo = wx.getSystemInfoSync()</div><div class=\"line\">App(&#123;</div><div class=\"line\">  <span class=\"attr\">globalData</span>: &#123;</div><div class=\"line\">    systemInfo</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<p>在页面获取：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// Page A</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">const</span> &#123;</div><div class=\"line\">  systemInfo</div><div class=\"line\">&#125; = getApp().globalData</div></pre></td></tr></table></figure>\n<h2 id=\"性能优化\"><a href=\"#性能优化\" class=\"headerlink\" title=\"性能优化\"></a>性能优化</h2><p>小程序运行在微信平台，而且可能和众多小程序“共享运行内存”，可想而知，单个小程序的性能极可能遇到瓶颈而Crash或被微信主动销毁！</p>\n<p>比如在摩拜单车有这个场景：</p>\n<p><strong> 首页展示地图找车，扫码成功后跳转到骑行地图。 </strong></p>\n<p>简单的逻辑，直接两个页面，两个<code>map</code>组件切换就可以搞定。实际测试场景中，iOS的确如预期，一切正常，但是在Android下，就很有可能会使得小程序Crash，扫码成功后直接退出了小程序。</p>\n<p>解决办法就是，<strong> 整个小程序只维护一个<code>map</code>组件 </strong>，通过不同的<code>State</code>来改变map的不同展现：</p>\n<p>index.wxml<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">map</span> <span class=\"attr\">id</span>=<span class=\"string\">\"map\"</span> <span class=\"attr\">controls</span>=<span class=\"string\">\"&#123;&#123;controls&#125;&#125;\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"&#123;&#123;style&#125;&#125;\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">map</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>index/index.js<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> indexStyle = <span class=\"string\">\"width: 750rpx; height: 1260rpx\"</span></div><div class=\"line\"><span class=\"keyword\">const</span> rideStyle = <span class=\"string\">\"width: 750rpx; height: 960rpx\"</span></div><div class=\"line\"></div><div class=\"line\">Page(&#123;</div><div class=\"line\">  <span class=\"attr\">data</span>: &#123;</div><div class=\"line\">    <span class=\"attr\">style</span>: indexStyle</div><div class=\"line\">  &#125;,</div><div class=\"line\">  onUnlock() &#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.setData(&#123;</div><div class=\"line\">      <span class=\"attr\">style</span>: rideStyle</div><div class=\"line\">    &#125;)</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure></p>\n<p>这样就成功解决了部分Android设备小程序Crash的问题。</p>\n<h2 id=\"广告\"><a href=\"#广告\" class=\"headerlink\" title=\"广告\"></a>广告</h2><p>说了这么多，重点来了：</p>\n<blockquote>\n<p>摩拜单车招聘前端工程师，不在乎PC端还是移动端，也不在乎React党还是Vue党，更不在乎有分号还是无分号党，我们的技术栈多而不乱，每项技术都只服务于自身最适合的项目。</p>\n<p>如果你爱折腾技术，也爱骑单车，那就最合适不过，欢迎投简历到 hr@mobike.com 或 zhangshibing@mobike.com 。</p>\n</blockquote>\n","excerpt":"","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>前一篇讲了如何在8天时间开发出一款微信小程序，并且包含了互联网开发产品的全部流程。这次主要讲讲技术方向的总结，在8天时间内如何一步步从学习到进阶。</p>\n<h2 id=\"思维转变\"><a href=\"#思维转变\" class=\"headerlink\" title=\"思维转变\"></a>思维转变</h2><ul>\n<li>微信小程序没有HTML的常用标签，而是类似<code>React</code>的微信自定义组件，比如<code>view</code>、<code>text</code>、<code>map</code>等</li>\n<li>没有<code>window</code>变量，但微信提供了<code>wx</code>全局方法集</li>\n<li>事件绑定和条件渲染类似<code>Angular</code>，全部写在<code>WXML</code>中</li>\n<li>数据绑定采用<code>Mustache</code>双大括号语法</li>\n<li>无法操作<code>DOM</code>，通过改变<code>page data</code>（类似<code>React</code>的state）来改变视图展现</li>\n</ul>\n<p>所以如果你熟悉以上提到的所有前端技术栈，开发微信小程序你会得心应手。</p>\n<h2 id=\"声明周期\"><a href=\"#声明周期\" class=\"headerlink\" title=\"声明周期\"></a>声明周期</h2><p>你可以理解小程序就是一个单页面的H5网页，所有元素的加载都是一次性的，这就引来了声明周期的概念：</p>\n<p><img src=\"/images/mobike-x-wechat-1.png\" alt=\"mobike-wechatapp\"></p>\n<ul>\n<li>首次打开，小程序初始化</li>\n<li>小程序初始化完成后，触发<code>onShow</code>事件</li>\n<li>小程序被切换到后台（熄屏，切换APP等），触发<code>onHide</code></li>\n<li>小程序从后台切换到前台，再次触发<code>onShow</code></li>\n<li>小程序出错，触发<code>onError</code></li>\n</ul>\n<p>每个页面也有自己的声明周期：</p>\n<p><img src=\"/images/mobike-x-wechat-2.png\" alt=\"mobike-wechatapp\"></p>\n<blockquote>\n<p>注意：在微信6.5.3版本中，部分Android机触发不了<code>onLoad</code>事件，可以用<code>onReady</code>替代。</p>\n</blockquote>\n<h2 id=\"事件广播\"><a href=\"#事件广播\" class=\"headerlink\" title=\"事件广播\"></a>事件广播</h2><p>“单页面结构”的微信小程序，你可以使用事件广播（统一的事件中心）来注册和触发自定义事件，否则到后期事件管理会越来越乱，而且涉及跨页面传输事件，你更需要这种事件触发机制，可以参考<a href=\"https://github.com/binnng/broadcast.js\">broadcast.js</a>。比如在摩拜单车中有这样的场景：</p>\n<p><strong> 扫码成功后在开锁页面A提示开锁成功，要跳转到骑行页面B并查询用户骑行状态。 </strong></p>\n<p>如果没有统一的事件管理中心，你几乎无法完成这样的过程，当然，可以使用Hack的方式解决。因为跳转到页面B会触发B的<code>onShow</code>事件，所以可以在<code>onShow</code>中写业务逻辑：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// Page A</span></div><div class=\"line\"><span class=\"comment\">// 开锁成功后，跳转到Page B</span></div><div class=\"line\">wx.redirectTo(&#123;</div><div class=\"line\">  <span class=\"attr\">url</span>: <span class=\"string\">\"/pages/riding/index\"</span></div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// Page B</span></div><div class=\"line\">Page(&#123;</div><div class=\"line\">  onShow() &#123;</div><div class=\"line\">    <span class=\"comment\">// 检查骑行状态</span></div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<p>但更合理的应该是利用事件广播来处理：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> broadcast = <span class=\"built_in\">require</span>(<span class=\"string\">\"libs/broadcast\"</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 先注册事件</span></div><div class=\"line\">broadcast.on(<span class=\"string\">\"check_ride_state\"</span>, () =&gt; &#123;</div><div class=\"line\">  <span class=\"comment\">// 检查骑行状态</span></div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> broadcast = <span class=\"built_in\">require</span>(<span class=\"string\">\"libs/broadcast\"</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// Page A</span></div><div class=\"line\"><span class=\"comment\">// 开锁成功后，触发事件，再跳转到Page B</span></div><div class=\"line\">broadcast.fire(<span class=\"string\">\"check_ride_state\"</span>)</div><div class=\"line\">wx.redirectTo(&#123;</div><div class=\"line\">  <span class=\"attr\">url</span>: <span class=\"string\">\"/pages/riding/index\"</span></div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<h2 id=\"数据中心\"><a href=\"#数据中心\" class=\"headerlink\" title=\"数据中心\"></a>数据中心</h2><p>根目录的<code>app.js</code>很有用，根目录的<code>app.js</code>很有用，根目录的<code>app.js</code>很有用。<br>因为在它内部注册的变量或方法，都是可以被所有页面获取到，所以利用它也可以处理上面所述的跨页面事件触发问题。而且可以注册<code>globalData</code>供所有页面取用，例如可以把<code>systemInfo</code>直接注册到<code>globalData</code>中，这样就不用在每个页面都获取一遍：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// app.js</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">const</span> systemInfo = wx.getSystemInfoSync()</div><div class=\"line\">App(&#123;</div><div class=\"line\">  <span class=\"attr\">globalData</span>: &#123;</div><div class=\"line\">    systemInfo</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<p>在页面获取：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// Page A</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">const</span> &#123;</div><div class=\"line\">  systemInfo</div><div class=\"line\">&#125; = getApp().globalData</div></pre></td></tr></table></figure>\n<h2 id=\"性能优化\"><a href=\"#性能优化\" class=\"headerlink\" title=\"性能优化\"></a>性能优化</h2><p>小程序运行在微信平台，而且可能和众多小程序“共享运行内存”，可想而知，单个小程序的性能极可能遇到瓶颈而Crash或被微信主动销毁！</p>\n<p>比如在摩拜单车有这个场景：</p>\n<p><strong> 首页展示地图找车，扫码成功后跳转到骑行地图。 </strong></p>\n<p>简单的逻辑，直接两个页面，两个<code>map</code>组件切换就可以搞定。实际测试场景中，iOS的确如预期，一切正常，但是在Android下，就很有可能会使得小程序Crash，扫码成功后直接退出了小程序。</p>\n<p>解决办法就是，<strong> 整个小程序只维护一个<code>map</code>组件 </strong>，通过不同的<code>State</code>来改变map的不同展现：</p>\n<p>index.wxml<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">map</span> <span class=\"attr\">id</span>=<span class=\"string\">\"map\"</span> <span class=\"attr\">controls</span>=<span class=\"string\">\"&#123;&#123;controls&#125;&#125;\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"&#123;&#123;style&#125;&#125;\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">map</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>index/index.js<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> indexStyle = <span class=\"string\">\"width: 750rpx; height: 1260rpx\"</span></div><div class=\"line\"><span class=\"keyword\">const</span> rideStyle = <span class=\"string\">\"width: 750rpx; height: 960rpx\"</span></div><div class=\"line\"></div><div class=\"line\">Page(&#123;</div><div class=\"line\">  <span class=\"attr\">data</span>: &#123;</div><div class=\"line\">    <span class=\"attr\">style</span>: indexStyle</div><div class=\"line\">  &#125;,</div><div class=\"line\">  onUnlock() &#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.setData(&#123;</div><div class=\"line\">      <span class=\"attr\">style</span>: rideStyle</div><div class=\"line\">    &#125;)</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure></p>\n<p>这样就成功解决了部分Android设备小程序Crash的问题。</p>\n<h2 id=\"广告\"><a href=\"#广告\" class=\"headerlink\" title=\"广告\"></a>广告</h2><p>说了这么多，重点来了：</p>\n<blockquote>\n<p>摩拜单车招聘前端工程师，不在乎PC端还是移动端，也不在乎React党还是Vue党，更不在乎有分号还是无分号党，我们的技术栈多而不乱，每项技术都只服务于自身最适合的项目。</p>\n<p>如果你爱折腾技术，也爱骑单车，那就最合适不过，欢迎投简历到 hr@mobike.com 或 zhangshibing@mobike.com 。</p>\n</blockquote>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cixoo74dr0001kl5g2s4btvwx","tag_id":"cixoo74dw0002kl5gzas96ht6","_id":"cixoo74e40005kl5gnncluai1"},{"post_id":"cixooq74t0006kl5gxv7jgttd","tag_id":"cixoo74dw0002kl5gzas96ht6","_id":"cixooq74x0007kl5g5t33xgx7"}],"Tag":[{"name":"小程序","_id":"cixoo74dw0002kl5gzas96ht6"}]}}